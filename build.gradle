wrapper {
	gradleVersion = '7.3.3'
}

buildscript {
	repositories {
		mavenCentral()
		maven { url "https://jitpack.io" }
		maven { url 'https://plugins.gradle.org/m2/' }
		mavenLocal()
	}
	dependencies {
		classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:4.0.0'
		classpath "com.avast.gradle:gradle-docker-compose-plugin:0.15.0"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.4.RELEASE"
	}
}

allprojects {
	version = project.version

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'groovy'
	apply plugin: 'maven-publish'
	apply plugin: 'org.unbroken-dome.test-sets'
	apply from: "${rootDir}/libraries.gradle"
	apply from: "${rootDir}/publish.gradle"

	sourceCompatibility = '1.9'
	targetCompatibility = '1.9'
	repositories {
		mavenCentral()
		mavenLocal()
	}

	testSets {
		integrationTest {
			dirName = 'test-integration'
		}
	}

	dependencies {
        annotationProcessor libraries.lombok
        compileOnly libraries.lombok
        compileOnly libraries.groovy

        implementation libraries.slf4j

        testImplementation libraries.groovy
        testImplementation libraries.junit
        testImplementation libraries.spock
	}

	test {
		reports.junitXml.destination = file('build/test-results')

		testLogging {
			events "passed", "skipped", "failed", "standardError"
			showStackTraces = true
			exceptionFormat = 'full'
		}
	}

	integrationTest {
		reports.junitXml.destination = file('build/test-integration-results')

		testLogging {
			events "passed", "skipped", "failed", "standardError"
			showStackTraces = true
			exceptionFormat = 'full'
		}
	}
	check.dependsOn integrationTest

	ext.isRunningOnCI = {
		System.getenv("CI") == "true"
	}
}

configurations {
	provided
	tests
	runtime {
		exclude module: 'lombok'
	}

	compile {
		exclude module: 'groovy-all'
	}
}