plugins {
	id 'io.spring.dependency-management' version "1.0.7.RELEASE"
}
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.unbroken-dome.test-sets'
apply plugin: 'docker-compose'

dependencyManagement {
	imports {
		mavenBom libraries.spring_boot
	}
}

dependencies {
    testImplementation 'org.openjdk.jmh:jmh-core:1.25.2'
    testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.25.2'

    testCompile project(':idempotence4j-test')
    testImplementation 'org.springframework:spring-jdbc'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.github.mp911de.microbenchmark-runner:microbenchmark-runner-junit5:0.2.0.RELEASE'
    testImplementation 'com.github.mp911de.microbenchmark-runner:microbenchmark-runner-extras:0.2.0.RELEASE'
    testImplementation 'de.bytefish.pgbulkinsert:pgbulkinsert-core:7.0.1'
    testImplementation 'de.bytefish.pgbulkinsert:pgbulkinsert-rowwriter:7.0.1'
    testImplementation 'com.github.f4b6a3:uuid-creator:2.7.10'

    testImplementation project(':idempotence4j-core')
    testImplementation project(':idempotence4j-postgres')
    testImplementation libraries.hikari
    testImplementation libraries.flyway
    testImplementation libraries.postgresql
}

test {
    useJUnitPlatform()
    onlyIf {
        System.getenv("CI") != "true"
    }
}

if (System.getenv("CI") != "true") {
    dockerCompose.isRequiredBy test
}
dockerCompose {
    useComposeFiles = ["src/test/resources/docker-compose.yml"]
    stopContainers = true
    removeContainers = true
}
